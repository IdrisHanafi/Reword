datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int     @id @default(autoincrement())
  name  String
  host Boolean @default(false)
  game Game @relation(fields: [gameId], references: [id])
  gameId Int
  gameGuess  UserGuess[]
  userVote UserVote[]
  hostWord HostWord?
}

model Game {
  id    Int     @id @default(autoincrement())
  users User[]
  start  DateTime  @default(now())
  gameEnd   DateTime? @updatedAt
  abandoned Boolean @default(false)
  completed Boolean @default(false)
  joinCode    Int
  userGuess UserGuess[]
  hostWord HostWord?
}

model UserGuess {
  id    Int     @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  gameId Int
  game Game @relation(fields: [gameId], references: [id])
  created DateTime @default(now())
  guess String
  userVote UserVote[]
}

model HostWord {
  id    Int     @id @default(autoincrement())
  userId Int?
  user User? @relation(fields: [userId], references: [id])
  gameId Int?
  game Game? @relation(fields: [gameId], references: [id])
  created DateTime @default(now())
  word String
}

model UserVote {
  id    Int     @id @default(autoincrement())
  userId Int // Voter
  user User @relation(fields: [userId], references: [id])
  userGuessId Int // Voted Word
  userGuess UserGuess @relation(fields: [userGuessId], references: [id])
  created DateTime @default(now())
}

